version: '3.8'

services:
  postgres-auth:  # Cambié el nombre del servicio para que coincida con la base de datos
    image: postgres:latest
    container_name: postgres-auth
    restart: always
    environment:
      POSTGRES_DB: attendance_db  # La base de datos en el contenedor
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5434:5432"  # Exponemos el puerto 5434 para acceder desde fuera
    networks:
      - my-network  # Red compartida
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  attendance-service:
    build: .
    container_name: attendance-service
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      postgres-auth:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-auth:5432/attendance_db  # Cambié esto para que apunte a postgres-auth
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - my-network  # Red compartida

networks:
  my-network:  # Red compartida para todos los microservicios
    driver: bridge

volumes:
  postgres_auth_data:  # Volumen para la persistencia de la base de datos
